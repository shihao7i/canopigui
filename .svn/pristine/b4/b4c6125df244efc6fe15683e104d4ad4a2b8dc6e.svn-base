angular.module('admin.service').service('AdminLookupService', ['$q', '$http', '$log', 'mockDataFlag', 
                              function ($q, $http,$log, mockDataFlag) {
	
	'use strict';
	
        var baseUrl = '/gui-canopi-js/src/app/admin-app/mock/lookupadmin/';
        
        
        this.getLookupTypePicklist = function () {

            var deferred = $q.defer();
            $http.get(baseUrl + 'lookuptypepicklist.json').success(function (response) {
                 deferred.resolve(response);
            });
       
            return deferred.promise; 
	};
        
        
               
        this.getReworkTaskPicklist = function () {

            var deferred = $q.defer();
            $http.get(baseUrl + 'reworktaskpicklist.json').success(function (response) {
                 deferred.resolve(response);
            });
       
            return deferred.promise; 
	};

        
	
	this.getJeopardyCodes = function () {

            var deferred = $q.defer();
            $http.get(baseUrl + 'jeopardycodes.json').success(function (response) {
                 deferred.resolve(response);
            });
       
            return deferred.promise; 
	};
		
                
       this.getCarrierNames = function () {

            var deferred = $q.defer();
            $http.get(baseUrl + 'carriernames.json').success(function (response) {
                 deferred.resolve(response);
            });
       
            return deferred.promise; 
	};
        
        
        this.getBackhualProduct = function () {

            var deferred = $q.defer();
            $http.get(baseUrl + 'backhualproduct.json').success(function (response) {
                 deferred.resolve(response);
            });
       
            return deferred.promise; 
	};
		
		
        this.getSpecialApplications = function () {

            var deferred = $q.defer();
            $http.get(baseUrl + 'specialapplications.json').success(function (response) {
                 deferred.resolve(response);
            });
       
            return deferred.promise; 
	};
        
 

        // need to pass in rework task name to retrieve a list of associated tework codes
        this.getReworkCodes = function (reworkTask) {

            var deferred = $q.defer();
            $http.get(baseUrl + 'reworkcodes.json').success(function (response) {
                 deferred.resolve(response);
            });
       
            return deferred.promise; 
	};


}]);